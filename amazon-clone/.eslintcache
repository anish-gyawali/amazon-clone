[{"C:\\Users\\anish\\Amazon\\amazon-clone\\amazon-clone\\src\\StateProvider.js":"1","C:\\Users\\anish\\Amazon\\amazon-clone\\amazon-clone\\src\\CheckoutProduct.js":"2","C:\\Users\\anish\\Amazon\\amazon-clone\\amazon-clone\\src\\Header.js":"3","C:\\Users\\anish\\Amazon\\amazon-clone\\amazon-clone\\src\\Checkout.js":"4","C:\\Users\\anish\\Amazon\\amazon-clone\\amazon-clone\\src\\Subtotal.js":"5","C:\\Users\\anish\\Amazon\\amazon-clone\\amazon-clone\\src\\App.js":"6","C:\\Users\\anish\\Amazon\\amazon-clone\\amazon-clone\\src\\Payment.js":"7","C:\\Users\\anish\\Amazon\\amazon-clone\\amazon-clone\\src\\axios.js":"8"},{"size":485,"mtime":1607953781833,"results":"9","hashOfConfig":"10"},{"size":1033,"mtime":1607953781829,"results":"11","hashOfConfig":"10"},{"size":2063,"mtime":1607961272194,"results":"12","hashOfConfig":"10"},{"size":1148,"mtime":1607966872549,"results":"13","hashOfConfig":"10"},{"size":1053,"mtime":1607966954533,"results":"14","hashOfConfig":"10"},{"size":1720,"mtime":1607973341912,"results":"15","hashOfConfig":"10"},{"size":4152,"mtime":1607980006220,"results":"16","hashOfConfig":"10"},{"size":187,"mtime":1607979736662,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"7w3mhv",{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\anish\\Amazon\\amazon-clone\\amazon-clone\\src\\StateProvider.js",[],"C:\\Users\\anish\\Amazon\\amazon-clone\\amazon-clone\\src\\CheckoutProduct.js",["36","37"],"C:\\Users\\anish\\Amazon\\amazon-clone\\amazon-clone\\src\\Header.js",["38"],"C:\\Users\\anish\\Amazon\\amazon-clone\\amazon-clone\\src\\Checkout.js",["39"],"C:\\Users\\anish\\Amazon\\amazon-clone\\amazon-clone\\src\\Subtotal.js",["40"],"C:\\Users\\anish\\Amazon\\amazon-clone\\amazon-clone\\src\\App.js",["41","42"],"import \"./App.css\";\r\nimport Header from \"./Header\";\r\nimport Home from \"./Home\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Checkout from \"./Checkout\";\r\nimport Login from \"./Login\";\r\nimport { useEffect } from \"react\";\r\nimport { auth } from \"./firebase\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport Payment from \"./Payment\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport { Elements } from \"@stripe/react-stripe-js\";\r\n\r\nconst promise = loadStripe(\r\n  \"pk_test_51HyMRCHr1msutjBNPGDteqJk5ORSiTj29bjEYexlSZ8LCRMUfu5lTNNGGtGr0rAkq68ArxbpN7e160RE3JxndkKm00lJ0D6zck\"\r\n);\r\n\r\nfunction App() {\r\n  const [{}, dispatch] = useStateValue();\r\n\r\n  useEffect(() => {\r\n    auth.onAuthStateChanged((authUser) => {\r\n      console.log(\"the user is \", authUser);\r\n      if (authUser) {\r\n        //the user is logged in\r\n        dispatch({\r\n          type: \"SET_USER\",\r\n          user: authUser,\r\n        });\r\n      } else {\r\n        //the user is logged out\r\n        dispatch({\r\n          type: \"SET_USER\",\r\n          user: null,\r\n        });\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"app\">\r\n        <Switch>\r\n          <Route path=\"/login\">\r\n            <Login />\r\n          </Route>\r\n          <Route path=\"/checkout\">\r\n            <Header />\r\n            <Checkout />\r\n          </Route>\r\n          <Route path=\"/payment\">\r\n            <Header />\r\n            <Elements stripe={promise}>\r\n              <Payment />\r\n            </Elements>\r\n          </Route>\r\n\r\n          <Route path=\"/\">\r\n            <Header />\r\n            <Home />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\anish\\Amazon\\amazon-clone\\amazon-clone\\src\\Payment.js",["43","44"],"import axios from \"./axios\";\r\nimport { CardElement, useElements, useStripe } from \"@stripe/react-stripe-js\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport CurrencyFormat from \"react-currency-format\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport CheckoutProduct from \"./CheckoutProduct\";\r\nimport \"./Payment.css\";\r\nimport { getBasketTotal } from \"./reducer\";\r\nimport { useStateValue } from \"./StateProvider\";\r\n\r\nfunction Payment() {\r\n  const history = useHistory();\r\n  const [{ basket, user }, dispatch] = useStateValue();\r\n\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n\r\n  const [processing, setProcessing] = useState(\"\");\r\n  const [succeeded, setSucceeded] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [disabled, setDisabled] = useState(true);\r\n  const [clientSecret, setClientSecret] = useState(true);\r\n\r\n  useEffect(() => {\r\n    //generate the special stripe secret which allows us to charge customer\r\n    const getClientSecret = async () => {\r\n      const response = await axios({\r\n        method: \"post\",\r\n        //stripe expects the total in currencies subunites\r\n        url: `/payments/create?total=${getBasketTotal(basket) * 100}`,\r\n      });\r\n      setClientSecret(response.data.clientSecret);\r\n    };\r\n    getClientSecret();\r\n  }, [basket]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    //fancy stripe steps..\r\n\r\n    e.preventDefault();\r\n    setProcessing(true);\r\n    const payload = await stripe\r\n      .confirmCardPayment(clientSecret, {\r\n        payment_method: {\r\n          card: elements.getElement(CardElement),\r\n        },\r\n      })\r\n      .then(({ paymentIntent }) => {\r\n        //paymentIntent= payment confirmation\r\n        setSucceeded(true);\r\n        setError(null);\r\n        setProcessing(false);\r\n        history.replace(\"/orders\");\r\n      });\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    //listen for the changes in the card elements\r\n    //and dispaly ay errors as the customer types their card details\r\n\r\n    setDisabled(e.empty);\r\n    setError(e.error ? e.error.message : \"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"payment\">\r\n      <div className=\"payment_container\">\r\n        <h1>\r\n          Checkout (<Link to=\"/checkout\">{basket?.length} items</Link>)\r\n        </h1>\r\n        <div className=\"payment_section\">\r\n          <div className=\"payment_title\">\r\n            <h3>Delivery address</h3>\r\n          </div>\r\n          <div className=\"payment_address\">\r\n            <p>{user?.email}</p>\r\n            <p>1206 Hooks Dr.</p>\r\n            <p>Hammond, LA, 70401</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"payment_section\">\r\n          <div className=\"payment_title\">\r\n            <h3> Review Items and delivery</h3>\r\n          </div>\r\n          <div className=\"payment_items\">\r\n            {basket.map((item) => (\r\n              <CheckoutProduct\r\n                id={item.id}\r\n                image={item.image}\r\n                title={item.title}\r\n                price={item.price}\r\n                rating={item.rating}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <div className=\"payment_section\">\r\n          <div className=\"payment_title\">\r\n            <h3> Payment Method</h3>\r\n          </div>\r\n          <div className=\"payment_details\">\r\n            <form onSubmit={handleSubmit}>\r\n              <CardElement onChange={handleChange} />\r\n              <div className=\"payment_priceContainer\">\r\n                <CurrencyFormat\r\n                  renderText={(value) => <h3>Order Total: {value}</h3>}\r\n                  decimalScale={2}\r\n                  value={getBasketTotal(basket)}\r\n                  displayType={\"text\"}\r\n                  thousandSeparator={true}\r\n                  prefix={\"$\"}\r\n                />\r\n              </div>\r\n              <button disabled={processing || disabled || succeeded}>\r\n                <span>{processing ? <p>Processing</p> : \"Buy Now\"}</span>\r\n              </button>\r\n              {error && <div>{error}</div>}\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Payment;\r\n","C:\\Users\\anish\\Amazon\\amazon-clone\\amazon-clone\\src\\axios.js",[],{"ruleId":"45","severity":1,"message":"46","line":7,"column":12,"nodeType":"47","messageId":"48","endLine":7,"endColumn":18},{"ruleId":"49","severity":1,"message":"50","line":18,"column":7,"nodeType":"51","endLine":18,"endColumn":60},{"ruleId":"45","severity":1,"message":"52","line":10,"column":28,"nodeType":"47","messageId":"48","endLine":10,"endColumn":36},{"ruleId":"45","severity":1,"message":"52","line":8,"column":28,"nodeType":"47","messageId":"48","endLine":8,"endColumn":36},{"ruleId":"45","severity":1,"message":"52","line":10,"column":22,"nodeType":"47","messageId":"48","endLine":10,"endColumn":30},{"ruleId":"53","severity":1,"message":"54","line":19,"column":10,"nodeType":"55","messageId":"56","endLine":19,"endColumn":12},{"ruleId":"57","severity":1,"message":"58","line":38,"column":6,"nodeType":"59","endLine":38,"endColumn":8,"suggestions":"60"},{"ruleId":"45","severity":1,"message":"52","line":13,"column":28,"nodeType":"47","messageId":"48","endLine":13,"endColumn":36},{"ruleId":"45","severity":1,"message":"61","line":42,"column":11,"nodeType":"47","messageId":"48","endLine":42,"endColumn":18},"no-unused-vars","'basket' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'dispatch' is assigned a value but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["62"],"'payload' is assigned a value but never used.",{"desc":"63","fix":"64"},"Update the dependencies array to be: [dispatch]",{"range":"65","text":"66"},[1109,1111],"[dispatch]"]